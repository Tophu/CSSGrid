body {
  font-size: 15px;
}

button {
  background: #ffc600;
  border: 0;
  padding: 10px 20px;
}

img {
  max-width: 100%;
}

/* Wrapper */
.wrapper {
  display: grid;
  grid-gap: 20px;
}

.top {
  display: grid;
  grid-gap: 20px;
  grid-template-areas: 
    "hero hero cta1"
    "hero hero cta2"
}

/* Hero */
.hero {
  grid-area: hero;
  min-height: 400px;
  background: white url(images/taco.jpg);
  background-size: cover;
  background-position: bottom right;
  padding: 50px;
  display: flex;
  flex-direction: column;
  align-items: start;
  justify-content: center;
}

.hero > * {
  background: var(--yellow);
  padding: 5px;
}

/* Call to action */
.cta {
  background: var(--yellow);
  display: grid;
  /* align-items: center;
  justify-items: center; */
  place-items: center center;
  align-content: center;
}

.cta p {
  margin: 0;
}

.cta1 {
  grid-area: cta1;
}

.cta2 {
  grid-area: cta2;
}

.price {
  font-size: 60px;
  font-weight: 300;
}

/* Navigation */
.menu ul {
  display: grid;
  grid-gap: 10px;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  padding: 0;
  list-style: none;
  /* margin: 20px 0; */
}

.menu a {
  background: var(--yellow);
  /* Links are inline by default, when using the background: colour with display: block, the colour will span across all the links in the UL, making it DRY and easy to create a button with grid-gap: declared inside the UL  */
  display: block;
  text-decoration: none;
  padding: 10px;
  text-align: center;
  color: var(--black);
  text-transform: uppercase;
  font-size: 20px;
}

/* Attribute Selector  */
[aria-controls="menu-list"] {
  /* Menu list will only be displayed on smaller devices/screens using media queries */
  display: none;
}

/* Features */
.features {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.feature {
  background: white;
  padding: 10px;
  border: 1px solid white;
  text-align: center;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.1);   
}

.feature .icon {
  font-size: 50px;
}

.feature p {
  color:  rgba(0, 0, 0, 0.5)
}

/* About */
.about {
  background: white;
  padding: 50px;
  display: grid;
  grid-template-columns: 400px 1fr;
  align-items: center; 
}

/* Gallery */
.gallery {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.gallery h2 {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns:  1fr auto 1fr;
  grid-gap: 20px;
  align-items: center;
}

.gallery h2:before, .gallery h2:after {
  display: block;
  /* Create new items inside the gallery h2 element (check the dev tools and now there will be 3 items in h2) with no value insude the content property */
  content: '';
  height: 10px;
 
  /* Adding colour gradient to the new items using linear-gradient(direction, colour to start at, and colour to stop at)*/
  /* background: linear-gradient(to left, var(--yellow), transparent); */

  /* Using variable as a direction value */
  background: linear-gradient(to var(--direction, left), var(--yellow), transparent);
}

.gallery h2:after {
  /* background: linear-gradient(to right, var(--yellow), transparent); */

  /* Can use the css variable, --direction (custom property) and add a new value to it */
  --direction: right;
}

.gallery img {
  width: 100%;
}

/* Responsive Menu, place above before the .top with order: -1 because .menu is a grid item inside the .wrapper */
@media (max-width: 1000px) {
  .menu {
    order: -1;
    perspective: 800px;
  }
  [aria-controls="menu-list"] {
    /* Show the menu list */
    display: block;
    margin-bottom: 10px;
  }
  .menu ul {
    max-height: 0;
    overflow: hidden;
    /* Hides the menu ul */
    transform: rotateX(90deg);
    /* Animation/Transition */
    transition: all 0.5s;
  }
  /* Attribute selector from JS function and a 'tilde' selector on the future sibling element */
  [aria-expanded="true"]  ~ ul {
    display: grid;
    max-height: 500px;
    transform: rotate(0);
  }
  /* Hide the X from the menu */
  [aria-expanded="false"] .close {
    display: none;
  }
  /* Display the X on the menu */
  [aria-expanded="true"] .open {
    display: inline-block;
  }
  [aria-expanded="true"] .open {
    display: none;
  }
}

@media (max-width: 700px) {
  .top {
    grid-template-areas: 
    "hero hero"
    "cta1 cta2"
  }

  /* About */
  .about {
    grid-template-columns: 1fr; 
  }
}

@media (max-width: 500px) {
  .top {
    grid-template-areas: 
    "hero"
    "cta1"
    "cta2"
  }
}

/* No need to add .menu or .gallery to @media queries because they both have the minmax() property and value, which makes them responsive*/